                            INSTRUCTIONS

         EYETRACKER DATA ANALYSIS (DATA FROM PCEXPT SYSTEM)

                        (revised 5/5/89, MJL)



                              OVERVIEW

     There are currently four programs avaiable for analyzing the 
data that is generated by the PCEXPT system. This system, as almost anyone who is reading this
document will know, tracks the progress of the human eye as a subject reads sentences. The
programs outlined below will allow the user to take raw data from the PCEXPT system and "clean
it up" and perform further analyses on it.

NOTE: Boldface words that are not section headings are words to be input by the user. The prompts
before these words are NOT to be entered. They are simply the prompts that the computer will give
you.

EYEWASH

     The EYEWASH program is the "clean-up" program. It takes raw data generated by PCEXPT and
creates a new, cleaned-up file for each subject. In neatening up the data, EYEWASH does two
things:

     A) It checks y-values, the vertical position of the eye, for the sentence being read. This value may
be out of the usual range due to a number of factors: improper calibration, non-linearity of the
eye-tracker, a blink or unusual eye movement by the subject, or noise in the system. If this value is
abnormally high, or a negative value, then it may mean that the subject blinked or that he/she looked
off of the screen momentarily. EYEWASH lets you correct for these problems.

     B) It looks for abnormally short or abnormally long fixation 
values and automatically corrects for them. It also allows the user
to further correct these data.

     The procedure for running eyewash is a bit tricky, but we will run through it here.

TO RUN EYEWASH:

STEP 1: Copy EYEWASH.TEM into your subdirectory   

     The first step in running EYEWASH is to create the program that will provide EYEWASH with
the necessary data files to check and correct the raw subject data.

     In subdirectory C:\DATA, there is a program template called 
EYEWASH.TEM. This template is written in the C programming language, as are all the
experiment-running programs. Each experiment uses a different program to get its data, and you
must use the program that ran your experiment.

     Make a copy of EYEWASH.TEM into the subdirectory that you will be using, and give the copy
a new name with a .C extension as you do. A reasonable name would be expnamSP.C where expnam
is a six-letter name for your experiment.

     For example, assuming you are on drive D in a subdirectory 
called DATA, and your experiment name will be TRACK:

     D:\DATA>COPY C:\EYEWASH.TEM TRACKSP.C

STEP 2: Insert your experiment program into xxxSP.C

     At this point, you must insert the main part of your experiment-running program, line-for-line,
into your newly created xxxSP.C file. The main part of the experiment-running program is the part
that assigns a value to the COND_ADJUST variable and makes use of the PICKONE() routine.

     These lines must be inserted in the xxxSP.C file right where it says "START OF YOUR MAIN
PROGRAM HERE." To do this you should uses a text editor and copy the lines from your program
file to the xxxSP.C file. Since this step depends largely on which editor you are using, we will not
elaborate here.

     If your program had special purpose subroutines for choosing the display, add these too.

STEP 3: Compile the new program

     Now you must compile this new C program just like any other 
before running it. Use the ETCC or ETCC206 batch file for this purpose. This batch command will
load the compiler, load your program in, and compile it, resulting in an executable file of .EXE type.
For example, to compile a program called expname.c, one would type:

     A> ETCC expname.C

The compiled program will then be called expname.EXE

STEP 4: Run the new program

     Now you must run the program that you have just created and 
compiled. You must run this program ONCE for EACH COUNTERBALANCING 
CONDITION in the experiment. This new program creates data files that map the fixations and
positions of the subject's eye, as recorded by the eytracker, onto the sentences that they were
responding to in the experiment. To run the program, simply type its name (without the extension)
from the main system prompt. Continuing the example above, you would simply type:

     A> expname

at the A> prompt to run the program.

     The program will prompt you for an input file. Enter the name of the sentence file used in the
experiment.

     The program will then prompt you for a data file. Simply press RETURN at this prompt.

     It will then ask for a condition number. Input the number of the counterbalancing condition that
you are working on.

     Finally, it will ask you for names to give the resulting data 
files. These files will contain the organized sentence and position data that was read by the
experiment-running program. It will ask you for sentence and position (.SEN and .POS) file names.
Enter an 
appropriate name for each condition, one that will make it obvious to you which condition the data
pertains to. Use the extensions .SEN and .POS to name these. For example:

     TRACK1.SEN      or     TRACK6.POS

STEP 5: Run the EYEWASH program

     Now that you have xx.SEN and xx.POS files in your subdirectory, you must run the EYEWASH
program on each subject's raw data file.

     EYEWASH will ask you if you want a printer or file trace of the error-correcting procedure. The
printer option will give you an immediate hardcopy of everything. If you choose file, it will create
a file on disk, a much quicker option.

     EYEWASH will ask you for a name to give the cleaned-up data file that it will produce. Use an
appropriate name for the subject and condition you are running through the program, and use an
extension that also is self-explanatory (like TRACK1.DA1 for "data for subject 1"). 

     EYEWASH will then ask you for the names of the .SEN and .POS files that are appropriate for
the current subject's counterbalancing condition. It will also ask you for the names of the raw data
file that you will be using. If you enter a filename here that has a .&AT extension (or any extension
with an ampersand), EYEWASH will immediately go to final fix mode. Enter these when prompted
to do so.

     The program will then ask you set two "cutoff values" that will be used by EYEWASH to correct
unusual fixations. The first cutoff value is used to check fixations that are very close together. If
fixations are closer together than a certain distance (generally one character) and one is very short
(generally 80 milliseconds is used), then they are combined.

     In addition to creating a cleaned-up data file, EYEWASH creates an intermediate data file that
contains the now correct y-values. This files has a .&AT extension (ex.: TRACK2.&AT). It also
gives a printout (or a data file) of each sentence's corrected fixations.

     Here is a sample run of EYEWASH with explanatory notes. Some of the simple
acknowledgements that EYEWASH will print out have been omitted to save space, but all prompts
are there. Boldface words are examples of appropriate entries at the given prompt:

C:\ EYEWASH

Version of 1/16/89

Do you want printer (p) or file (f) trace of analysis? P
       
EYEWASH: DATE 2 14 1989

Input data file name? r8135.dat
     (this file is the raw data file)

Input filename r8135.dat output data file name? r8135.da1
     (this is the file that will be output for use in EYEDRY, etc.)

Add to an existing intermediate file or create a new one? a or c? C
     (the A option does not work at this time)

New intermediate file r8135.&at. Sentence file name? r8con5.sen
     (this is the sentence file for counterbalancing conditions)

Sentence file r8con5.sen. Position file name? r8con5.pos
     (this is the position file for counterbalancing conditions)

Lowest condition number to analyze? 1
Highest condition number to analyze? 6
     (these set up the range of conditions to analyze - the value     will depend on the number of
conditions in your experiment)

Lowest item to analyze? 1
Highest item to analyze? 24
     (these set up the range of items to analyze - depends on the     number of items in your
experiment, and which you want to  analyze)

What is x offset value? 0
     (this is usually set to zero)

What is y offest value? 6
     (this is usually set to 6, but you should check your raw data
     file to make sure what the initial Y value is - that should      be your Y offset)

The Final Fix routine of this version first assimilates very short 
fixations to the next (or previous) fixation if the short fixation is less than TC1 and if the two
fixations are within DC1 spaces of each other. Typically, TC1 = 80, DC1 = 1.

The routine then deletes the remaining short fixations if they are less than TC2 msec long and within
DC2 spaces of the nearest fixation. Typically, TC2 = 40 msec, DC2 = 3.

TC2 must be less than TC1, and DC2 should be greater than DC1. This version also assimilates
adjacent fixations on the same point.

What is TC1 (msec)? 80
What is DC1 (characters)? 1

What is TC2 (msec)? 40
What is DC2 (characters)? 3
     (these are the prompts that set up the range of cutoff values
      by which it will evaluate the data for unusual values)

Type 1 if you want to do all initial screening first
 or 2 if you want to go sentence by sentence: 1
     (the sentence-by-sentence feature is not reliable at this   point, so it is best to choose number 1
at this prompt)


     EYEWASH then goes through the data file and looks for values 
that seem inappropriate. If it finds a sentence that has one or more deviant values, it will stop and
ask which fixation you want to fix, if any, or if you want to do a block change (change a whole range
of values with one command). EYEWASH will give you a list of all fixations for that particular
sentence and will put a star next to the deviant ones. It will always let you look at the first fixation
first. You may then go through the items and fix each one as you see fit.

     Here is an example run of the fix section of EYEWASH:

CONDITION 5 ITEM 1 #FIXATIONS 15
....|....1....|....2....|....3....|....4....|....5....|....6....|....7
Grandma knitted both a cap and a sweater quickly but then
her arthritis started to bother her.

 FIX  1 X=  4   Y=  6   START=   255   END=   482
 FIX  2 X= 13   Y=  6   START=   495   END=   684
*FIX  3 X= 24   Y= 14   START=   697   END=   704
 FIX  4 X= 28   Y=  6   START=   712   END=  1080
 FIX  5 X= 36   Y=  6   START=  1095   END=  1099
 FIX  6 X= 38   Y=  6   START=  1112   END=  1367
 FIX  7 X= 45   Y=  6   START=  1379   END=  1793
 FIX  8 X= 52   Y=  6   START=  1802   END=  2150
 FIX  9 X=  6   Y=  7   START=  2152   END=  2355
 FIX 10 X= 12   Y=  7   START=  2366   END=  2603
(etc.)

CHANGE WHICH FIXATION; 'ENTER' IF NO CHANGES
-1 TO SPECIFY BLOCK CHANGE; 999 TO TERMINATE ITEM? 3

     Item three is starred because the Y values is not in the 
acceptable range of values for that series of fixations. In this 
case, the user would simply be prompted for a new Y value.

     At first glance, the sudden jump at fixation 9 to a Y-value of 7 seems deviant. But looking at the
original sentence, you will see that after character 57, the sentence jumps to the next line, and
therefore the next Y value. However, EYEWASH will star it since it is a sudden change in the
pattern. You can simply ignore the supposedly deviant value.

     Typing 999 allows the user to terminate an item. This means 
that all data for that item is deleted. Everything is kept up to the point when 999 is chosen, and
everything after that point is thrown away. This option is often chosen if there is a tracking
malfunction part of the way through a trial. 

     Typing -1 allows the user to change several successive fixations to the same Y-value. For
example, if the user wishes to change the Y-values of fixations 7 through 10 to one value, the user
enters -1 and is prompted for the range of fixations and the new Y-value.

When all sentences are finished, ENTER is pressed and EYEWASH moves on to the next portion
of the program. At this point, a file is saved with a .&AT extension for returning directly to the Final
Fix portion of the program later.

     After this initial screening portion, EYEWASH places you in "final fix" mode, where deviant
values and fixations can be manipulated or deleted altogether. It will make some replacements
automatically as well as letting you choose if you want to do any manual replacements. 

     Here is a sample run of the final fix portion:

              FIX LET   DUR    FIX LET   DUR    FIX LET DUR
Grandma         1   5   227
knitted         2   6   189
both
a
cap             3   2   207
and             4   2   167
a
sweater         5   4   207
quickly         6   7   206
but
then|           7   0   563
her             9   3   204
arthritis       8   3   203
started        11   6   294
to
bother         10   0     8     12   3   421
her.|

CHANGE WHICH FIX
ENTER IF NONE; -1 FOR PREVIOUS FRAME; 999 TO DISCARD TRIAL: 10

How change?
 (D)elete, assimilate to (P)rev, assimilate to (N)ext, 'ENTER' cancel? N

     Fixation 10 was out of sequence with 9 and 11, and it's duration was far lower than a normal
fixation would be, so it would be deleted, and the other fixation numbers would be adjusted to
accomodate the deletion.

     After all the appropriate changes are made, EYEWASH will give you a final printout of the
altered items and the changes made to them.


